public class Solution {
    public double FindMedianSortedArrays(int[] nums1, int[] nums2) {
        int len1=nums1.Length;
        int len2=nums2.Length;  
        int maxLeft=0;
        int minRight=0;
        if(len1>len2)
        {
            int[] temp=nums1;
            nums1=nums2;
            nums2=temp;
            int tem=len1;
            len1=len2;
            len2=tem;
            //FindMedianSortedArrays(nums2,nums1);
        }
        int iMin=0;
        int iMax=len1;
        int halfLen=(len1+len2+1)/2;
        while(iMin<=iMax)
        {
            int i = (iMin+iMax)/2;        
            int j = halfLen-i;
            if(i<iMax && nums2[j-1]>nums1[i])
            {
                iMin=i+1;                
            }
            else if(i>iMin && nums1[i-1]>nums2[j])
            {
                iMax=i-1;
            }        
            else
            {
                if(i==0)
                    maxLeft=nums2[j-1];
                else if(j==0)
                    maxLeft=nums1[i-1];
                else
                    maxLeft=Math.Max(nums1[i-1],nums2[j-1]);
                if((len1+len2)%2==1)
                    return maxLeft;
                if(i==len1)
                    minRight=nums2[j];
                else if(j==len2)
                    minRight=nums1[i];
                else
                    minRight=Math.Min(nums1[i],nums2[j]);                            
                return (maxLeft+minRight)/2.0;
            }
        }   
        return -1;
    }
}