public class Solution {
    public string LongestPalindrome(string s) {
        if (s == null || s.Length < 1)
                return "";
            int n = s.Length;
            bool[,] mat = new bool[n, n];
            string subS= null ;
            int maxL = 1;
            int startI = 0;
            //初始化长度为1字符串
            for (int i = 0; i < n; i++)
            {
                mat[i, i] = true;
            }
            //初始化长度为2字符串
            for (int i = 0; i < n - 1; i++)
            {
                if (s[i] == s[i + 1])
                {
                    mat[i, i + 1] = true;
                    maxL = 2;
                    startI = i;
                }
                else
                    mat[i, i + 1] = false;
            }
            //初始化长度为3及以上子符串
            for (int i = 2; i < n; i++)
            {
                for (int j = 0; j < n - i; j++)
                {
                    if (s[j] == s[j + i] && mat[j + 1, j + i - 1])
                    {
                        mat[j, j + i] = true;
                        maxL = i+1;
                        startI = j;
                    }
                    else
                        mat[j, j + i] = false;
                }
            }
            subS = s.Substring(startI, maxL);
            return subS;
        
    }
}